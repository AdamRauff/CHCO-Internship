#!/usr/bin/perl

$cmd = 'subst';

$outside = "";

foreach $name (@ARGV) {
  if ( $name eq $cmd ) { 
    print STDOUT "tried to examine myself.\n";
    next; 
  }
  open(IN,"< $name") || die "can't read from $name: $!\n";
  open(OUT,"> $name.tmp") || die "can't write to $name.tmp: $!\n";
  $change = 0;
  if ( -f $name ) {
    while(<IN>) {
      $orig = $_;

### FIRST SUBST
      s/pksT/dPmaxIdx/g;
      s/pks/dPmaxVal/g;
      s/MinIdx/dPminIdx/g;
      s/Minima/dPminVal/g;

      s/isovoltime/isovolTime/g;
      s/isovol/isovolPres/g;
      s/isovolPresTime/isovolTime/g;

      s/EDP_NT/Iso2StIdx/g;
      s/EDP_NT_Doub/Iso2StIdx_Doub/g;
      s/EDP_T/Iso1StIdx/g;
      s/EDP_N/Iso2StVal/g;
      s/EDP/Iso1StVal/g;

### SECOND SUBST
#     s/\(1\)\.ivt/\.ivTime_D/g;
#     s/\(1\)\.iv/\.ivPres_D/g;
#     s/\(1\)\.isoPts/\.ivPlotTime/g;
#     s/\(2\)\.isoPts/\.ivPlotPres/g;

#     s/\(1\)\.Cs/\.fit.InitIC/g;
#     s/\(2\)\.Cs/\.fit.RCoef/g;
#     s/\(2\)\.Misc/\.fit.PIsoMax/g;

#     s/\(1\)\.Data/\.Time_D/g;
#     s/\(2\)\.Data/\.Pres_D/g;
#     s/\(3\)\.Data/\.dPdt_D/g;

#     s/\(2\)\.ivt/\.Time/g; 
#     s/\(2\)\.iv/\.fit.BadCyc/g;
#     s/\(1\)\.Misc/\.Iso1StVal/g;

#     s/\(1\)\.EDPs/\.Iso1StIdx_D/g;
#     s/\(2\)\.EDPs/\.Iso2StIdx_D/g;
#     s/\(1\)\.Crit/\.dPmaxIdx/g;
#     s/\(2\)\.Crit/\.dPminIdx/g;

### SECOND SUBST CONTINUED...
#     s/\.OldIsoT/\.UNDOivPlotTime/g;
#     s/\.OldIsoT/.UNDOivPlotTime/g;
#     s/\.OldIsoP/.UNDOivPlotPres/g;
#     s/\.OldIsoVolT/.UNDOivTime_D/g;
#     s/\.OldEDPT/.UNDOIso1StIdx_D/g;
#     s/\.OldEDPNT/.UNDOIso2StIdx_D/g;
#     s/\.OldIsoVol/.UNDOivPres_D/g;
#     s/\.OldEDP/.UNDOIso1StVal/g;
#     s/\.OldPksT/.UNDOdPmaxIdx/g;
#     s/\.OldMinIdx/.UNDOdPminIdx/g;
#     s/\.OldMinima/.UNDOdPminVal/g;

### SECOND SUBST CONTINUED AGAIN...
#     s/\(3\)\.Data/.dPdt/g;
#     s/\(1\)\.Min/.dPminIdx/g;
#     s/\(2\)\.Min/.dPminVal/g;
#     s/\(1\)\.Max/.dPmaxIdx/g;
#     s/\(2\)\.Max/.dPmaxVal/g;
#     s/\(3\)\.Max/.TotNumWaves/g;
#     s/\(1\)\.IM/.Green_Check/g;
#     s/\(2\)\.IM/.Red_X/g;


### FIX ERROR :)
#     s/\.fit\.BadCyct/\.Time/g;

### CLEANUP SUBST
#     s/\.OldpksT/\.dPmaxIdx/;
#     s/\.Oldpks/\.dPmaxVal/;

      print OUT $_;

      if ( $orig ne $_ ) {
          ++$change;
      }

    }
  }
  close(IN);
  close(OUT);
  if ( $change > 0 ) {
    system 'touch', '-r', "$name", "$name\.tmp";
    system 'mv', '-f', "$name\.tmp", "$name";
    print "$cmd : $name was modified, $change substitutions\n";
  } else {
    system 'rm', '-f', "$name\.tmp";
  }
}
